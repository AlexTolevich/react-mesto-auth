{"version":3,"sources":["images/logo-mesto.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","utils/api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/Login.js","components/Register.js","images/success.svg","images/error.svg","components/InfoTooltip.js","components/ProtectedRoute.js","utils/auth.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","email","title","to","onClick","className","src","logo","alt","CurrentUserContext","React","createContext","Card","link","name","counterLikes","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","isLiked","likes","some","i","cardLikeButtonClassName","type","Main","onEditAvatar","onAddPlace","onEditProfile","cards","avatar","about","map","length","Footer","lang","PopupWithForm","buttonTitle","isOpen","onClose","onSubmit","children","onCloseOverlayClick","ImagePopup","api","options","this","_baseUrl","baseUrl","_headers","headers","res","ok","json","Promise","reject","status","all","getUserInfo","getInitialCards","fetch","then","_checkResponse","data","method","body","JSON","stringify","description","id","liked","authorization","EditProfilePopup","onUpdateUser","useState","setName","setDescription","useEffect","event","preventDefault","placeholder","minLength","maxLength","value","onChange","target","required","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","e","ref","AddPlacePopup","nameCard","setNameCard","linkCard","setLinkCard","Login","onLogin","setEmail","password","setPassword","Register","onRegister","InfoTooltip","isInfoTooltipStatus","success","error","ProtectedRoute","Component","component","props","loggedIn","BASE_URL","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isInfoTooltipOpened","setIsInfoTooltipOpened","setIsInfoTooltipStatus","selectedCard","setSelectedCard","setCurrentUser","setCards","setLoggedIn","navigate","useNavigate","handleInfoTooltip","closeOverlayClick","classList","contains","closeAllPopups","token","jwt","localStorage","getItem","catch","err","console","log","handleEscClose","key","getAppInfo","userInfoRes","cardListRes","document","addEventListener","removeEventListener","Provider","path","element","removeItem","updateCardLike","newCard","state","c","delCard","deleteCard","filter","currentCard","setItem","auth","finally","setUserInfo","user","postNewCard","setAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.60f8fc10.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-mesto.b8ac1065.svg\";","import logo   from '../images/logo-mesto.svg';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Header({email, title, to, onClick}) {\r\n    return (\r\n        <header className=\"header\">\r\n            <img\r\n                src={logo}\r\n                alt=\"Логотип Место\"\r\n                className=\"header__logo\"\r\n            />\r\n            <nav className=\"header__nav\">\r\n                <p className=\"header__email\">{email}</p>\r\n                <Link to={to} className=\"header__button\" onClick={onClick}>{title}</Link>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n","import React                from 'react';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext.js';\r\n\r\nfunction Card({link, name, counterLikes, card, onCardClick, onCardLike, onCardDelete}) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n// Определяем, являемся ли мы владельцем текущей карточки\r\n    const isOwn = card.owner._id === currentUser._id;\r\n\r\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n\r\n// Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n    const cardLikeButtonClassName = (`element__like ${isLiked && 'element__like_active'}`);\r\n\r\n    function handleCardClick() {\r\n        onCardClick(card);\r\n    }\r\n\r\n    function handleLikeClick() {\r\n        onCardLike(card);\r\n    }\r\n\r\n    function handleDeleteClick() {\r\n        onCardDelete(card);\r\n    }\r\n\r\n\r\n    return (\r\n        <article className=\"element\">\r\n            <img src={link} alt={`Фото ${name}`} className=\"element__photo\" onClick={handleCardClick}/>\r\n            <div className=\"element__title-container\">\r\n                <h2 className=\"element__title\">{name}</h2>\r\n                <div className=\"element__like-container\">\r\n                    <button\r\n                        aria-label=\"Отметить нравится\"\r\n                        type=\"button\"\r\n                        className={cardLikeButtonClassName}\r\n                        onClick={handleLikeClick}\r\n                    />\r\n                    <span className=\"element__likes-count\">{counterLikes}</span>\r\n                </div>\r\n            </div>\r\n            {isOwn && <button\r\n                aria-label=\"Удалить карточку\"\r\n                type=\"button\"\r\n                className=\"element__remove\"\r\n                onClick={handleDeleteClick}\r\n            />}\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Card","import React                from 'react';\r\nimport Card                 from './Card.js';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext.js';\r\n\r\nfunction Main({onEditAvatar, onAddPlace, onEditProfile, onCardClick, cards, onCardLike, onCardDelete}) {\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile\">\r\n                <div className=\"profile__container\">\r\n                    <img\r\n                        src={currentUser.avatar}\r\n                        alt=\"аватар профиля\"\r\n                        className=\"profile__avatar\"\r\n                        onClick={onEditAvatar}\r\n                    />\r\n                    <div className=\"profile__info\">\r\n                        <div className=\"profile__name-container\">\r\n                            <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n                            <button\r\n                                aria-label=\"Редактировать профиль\"\r\n                                type=\"button\"\r\n                                className=\"profile__edit-button\"\r\n                                onClick={onEditProfile}\r\n                            />\r\n                        </div>\r\n                        <p className=\"profile__job\">{currentUser.about}</p>\r\n                    </div>\r\n                </div>\r\n                <button\r\n                    aria-label=\"Добавить карточку\"\r\n                    type=\"button\"\r\n                    className=\"profile__add-button\"\r\n                    onClick={onAddPlace}\r\n                />\r\n            </section>\r\n\r\n            <section aria-label=\"Галерея фотографий\" className=\"elements\">\r\n                {cards.map((card) => (\r\n                        <Card\r\n                            key={card._id}\r\n                            link={card.link}\r\n                            name={card.name}\r\n                            counterLikes={card.likes.length}\r\n                            card={card}\r\n                            onCardClick={onCardClick}\r\n                            onCardLike={onCardLike}\r\n                            onCardDelete={onCardDelete}\r\n                        />\r\n                    )\r\n                )}\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main","function Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\" lang=\"en\">&copy; 2021 Mesto Russia</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","function PopupWithForm({name, title, buttonTitle, isOpen, onClose, onSubmit, children, onCloseOverlayClick}) {\r\n    return (\r\n        <div className={`popup popup_type_${name} ${isOpen && 'popup_opened'}`} onClick={onCloseOverlayClick}>\r\n            <div className={`popup__container popup__container_type_${name}`}>\r\n                <button\r\n                    aria-label=\"Закрыть окно подтверждения\"\r\n                    type=\"button\"\r\n                    className=\"popup__close-button\"\r\n                    onClick={onClose}\r\n                />\r\n                <h2 className=\"popup__title\">{title}</h2>\r\n                <form name={name} className={`popup__form popup__form_type_${name}`} onSubmit={onSubmit}>\r\n                    {children}\r\n                    <button type=\"submit\" className=\"popup__button\">{buttonTitle}</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm","function ImagePopup({card, onClose, onCloseOverlayClick}) {\r\n    return (\r\n        <div className={`popup popup_type_full-screen ${card ? 'popup_opened' : ''}`} onClick={onCloseOverlayClick}>\r\n            <div className=\"popup__image-container\">\r\n                <img src={card ? card.link : ''} alt={card ? card.name : ''} className=\"popup__image\"/>\r\n                <p className=\"popup__image-caption\">{card ? card.name : ''}</p>\r\n                <button\r\n                    aria-label=\"Закрыть окно просмотра фотографий\"\r\n                    type=\"button\"\r\n                    className=\"popup__close-button\"\r\n                    onClick={onClose}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImagePopup","class Api {\r\n    constructor(options) {\r\n        this._baseUrl = options.baseUrl;\r\n        this._headers = options.headers;\r\n    }\r\n\r\n    _checkResponse(res) {\r\n        if (res.ok) {\r\n            return res.json()\r\n        } else {\r\n            return Promise.reject(res.status)\r\n        }\r\n        // return res => res.ok ? res.json() : Promise.reject(res.status);\r\n    }\r\n\r\n    /**\r\n     * promiseAll для получения данных пользователя и карточек с сервера\r\n     * @returns {Promise<any[]>}\r\n     */\r\n    getAppInfo() {\r\n        return Promise.all([this.getUserInfo(), this.getInitialCards()])\r\n    }\r\n\r\n    /**\r\n     *публичный метод загрузки данных пользователя с сервера\r\n     * @returns {Promise<any>}\r\n     */\r\n    getUserInfo() {\r\n        return fetch(`${this._baseUrl}users/me`, {headers: this._headers})\r\n            .then(this._checkResponse);\r\n    }\r\n\r\n    setAvatar(data) {\r\n        return fetch(`${this._baseUrl}users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({avatar: data.avatar})\r\n        })\r\n            .then(this._checkResponse);\r\n    }\r\n\r\n    setUserInfo(data) {\r\n        return fetch(`${this._baseUrl}users/me`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({name: data.name, about: data.description})\r\n        })\r\n            .then(this._checkResponse);\r\n    }\r\n\r\n    getInitialCards() {\r\n        return fetch(`${this._baseUrl}cards`, {headers: this._headers})\r\n            .then(this._checkResponse);\r\n    }\r\n\r\n    postNewCard(data) {\r\n        return fetch(`${this._baseUrl}cards`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({name: data.name, link: data.link})\r\n        })\r\n            .then(this._checkResponse);\r\n    }\r\n\r\n    deleteCard(id) {\r\n        return fetch(`${this._baseUrl}cards/${id}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers,\r\n        })\r\n            .then(this._checkResponse);\r\n    }\r\n\r\n    updateCardLike(id, liked) {\r\n        return fetch(`${this._baseUrl}cards/likes/${id}`, {\r\n            method: liked ? 'PUT' : 'DELETE',\r\n            headers: this._headers,\r\n        })\r\n            .then(this._checkResponse);\r\n    }\r\n}\r\n\r\nconst api = new Api({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-29/',\r\n    headers: {\r\n        authorization: 'af44a922-d278-427e-a751-f282a0177a52',\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\nexport {api}\r\n\r\n","import PopupWithForm        from './PopupWithForm.js';\r\nimport React                from 'react';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext.js';\r\n\r\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser, onCloseOverlayClick}) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const [name, setName] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n\r\n    function handleChangeName(event) {\r\n        setName(event.target.value);\r\n    }\r\n\r\n    function handleChangeDescription(event) {\r\n        setDescription(event.target.value);\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        onUpdateUser({\r\n            name,\r\n            description,\r\n        });\r\n    }\r\n\r\n    // После загрузки текущего пользователя из API\r\n    // его данные будут использованы в управляемых компонентах.\r\n    React.useEffect(() => {\r\n        if (isOpen) {\r\n            setName(currentUser.name);\r\n            setDescription(currentUser.about);\r\n        }\r\n    }, [currentUser, isOpen]);\r\n\r\n    return (\r\n        <PopupWithForm\r\n            name=\"edit\"\r\n            title=\"Редактировать профиль\"\r\n            buttonTitle=\"Сохранить\"\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            onCloseOverlayClick={onCloseOverlayClick}\r\n        >\r\n            <input\r\n                aria-label=\"Ваше имя\"\r\n                type=\"text\"\r\n                name=\"popup_name\"\r\n                id=\"popup_name\"\r\n                className=\"popup__input popup__input_is_name\"\r\n                placeholder=\"Введите Ваше имя\"\r\n                minLength=\"2\"\r\n                maxLength=\"40\"\r\n                value={name}\r\n                onChange={handleChangeName}\r\n                required\r\n            />\r\n            <span id=\"popup-name-error\" className=\"popup__error\"/>\r\n            <input\r\n                aria-label=\"Род деятельности\"\r\n                type=\"text\"\r\n                name=\"popup_job\"\r\n                id=\"popup_job\"\r\n                className=\"popup__input popup__input_is_job\"\r\n                placeholder=\"Введите Ваш род деятельности\"\r\n                minLength=\"2\"\r\n                maxLength=\"200\"\r\n                value={description}\r\n                onChange={handleChangeDescription}\r\n                required\r\n            />\r\n            <span id=\"popup-job-error\" className=\"popup__error\"/>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditProfilePopup","import PopupWithForm from './PopupWithForm.js';\r\nimport React         from 'react';\r\n\r\nfunction EditAvatarPopup({isOpen, onClose, onUpdateAvatar, onCloseOverlayClick}) {\r\n    const avatarRef = React.useRef();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onUpdateAvatar({avatar: avatarRef.current.value});\r\n    }\r\n\r\n    React.useEffect(() => {\r\n            avatarRef.current.value = ''\r\n        }, [isOpen]\r\n    )\r\n\r\n    return (\r\n        <PopupWithForm\r\n            name=\"avatar\"\r\n            title=\"Обновить аватар\"\r\n            buttonTitle=\"Сохранить\"\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            onCloseOverlayClick={onCloseOverlayClick}\r\n        >\r\n            <input\r\n                aria-label=\"Ссылка на аватар\"\r\n                type=\"url\"\r\n                name=\"avatar\"\r\n                id=\"avatar-img-link\"\r\n                className=\"popup__input popup__input_type_avatar-link\"\r\n                required\r\n                placeholder=\"Ссылка на аватар\"\r\n                ref={avatarRef}\r\n            />\r\n            <span id=\"avatar-img-link-error\" className=\"popup__error\"/>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup","import PopupWithForm from './PopupWithForm.js';\r\nimport React         from 'react';\r\n\r\nfunction AddPlacePopup({isOpen, onClose, onAddPlace, onCloseOverlayClick}) {\r\n    const [nameCard, setNameCard] = React.useState('')\r\n    const [linkCard, setLinkCard] = React.useState('')\r\n\r\n    function handleChangeCardName(event) {\r\n        setNameCard(event.target.value);\r\n    }\r\n\r\n    function handleChangeCardLink(event) {\r\n        setLinkCard(event.target.value);\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        onAddPlace({\r\n            name: nameCard,\r\n            link: linkCard,\r\n        });\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        setNameCard('');\r\n        setLinkCard('');\r\n    }, [isOpen]);\r\n\r\n    return (\r\n        <PopupWithForm\r\n            name=\"add\"\r\n            title=\"Новое место\"\r\n            buttonTitle=\"Создать\"\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            onCloseOverlayClick={onCloseOverlayClick}\r\n        >\r\n            <input\r\n                aria-label=\"Название фото\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"place-name\"\r\n                className=\"popup__input popup__input_is_place-name\"\r\n                required\r\n                placeholder=\"Название\"\r\n                minLength=\"2\"\r\n                maxLength=\"30\"\r\n                onChange={handleChangeCardName}\r\n                value={nameCard}\r\n            />\r\n            <span id=\"place-name-error\" className=\"popup__error\"/>\r\n            <input\r\n                aria-label=\"Ссылка на картинку\"\r\n                type=\"url\"\r\n                name=\"link\"\r\n                id=\"place-img-link\"\r\n                className=\"popup__input popup__input_is_img-link\"\r\n                required\r\n                placeholder=\"Ссылка на картинку\"\r\n                onChange={handleChangeCardLink}\r\n                value={linkCard}\r\n            />\r\n            <span id=\"place-img-link-error\" className=\"popup__error\"/>\r\n        </PopupWithForm>\r\n\r\n    )\r\n}\r\n\r\nexport default AddPlacePopup","import React from 'react';\r\n\r\nfunction Login({onLogin}) {\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n\r\n    function handleChangeEmail(event) {\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    function handleChangePassword(event) {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (!email || !password) {\r\n            return;\r\n        }\r\n        onLogin(email, password);\r\n    }\r\n\r\n    return (\r\n        <section className=\"login\">\r\n            <h2 className=\"login__title\">Вход</h2>\r\n            <form className=\"login__form\" onSubmit={handleSubmit}>\r\n                <input\r\n                    aria-label=\"Ваша почта\"\r\n                    type=\"Email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    className=\"login__input\"\r\n                    placeholder=\"Email\"\r\n                    minLength=\"2\"\r\n                    value={email}\r\n                    onChange={handleChangeEmail}\r\n                    required\r\n                />\r\n                <span id=\"email-error\" className=\"login__error\"/>\r\n                <input\r\n                    aria-label=\"Пароль\"\r\n                    type=\"Password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    className=\"login__input\"\r\n                    placeholder=\"Пароль\"\r\n                    minLength=\"6\"\r\n                    maxLength=\"200\"\r\n                    value={password}\r\n                    onChange={handleChangePassword}\r\n                    required\r\n                />\r\n                <span id=\"password-error\" className=\"login__error\"/>\r\n                <button type=\"submit\" className=\"login__button\">Войти</button>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Login;","import React  from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Register({onRegister}) {\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n\r\n    function handleChangeEmail(event) {\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    function handleChangePassword(event) {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (!email || !password) {\r\n            return;\r\n        }\r\n        onRegister(email, password);\r\n    }\r\n\r\n    return (\r\n        <section className=\"login\">\r\n            <h2 className=\"login__title\">Регистрация</h2>\r\n            <form className=\"login__form\" onSubmit={handleSubmit}>\r\n                <input\r\n                    aria-label=\"Ваша почта\"\r\n                    type=\"Email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    className=\"login__input\"\r\n                    placeholder=\"Email\"\r\n                    minLength=\"2\"\r\n                    onChange={handleChangeEmail}\r\n                    value={email}\r\n                    required\r\n                />\r\n                <span id=\"email-error\" className=\"login__error\"/>\r\n                <input\r\n                    aria-label=\"Пароль\"\r\n                    type=\"Password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    className=\"login__input\"\r\n                    placeholder=\"Пароль\"\r\n                    minLength=\"6\"\r\n                    maxLength=\"200\"\r\n                    onChange={handleChangePassword}\r\n                    value={password}\r\n                    required\r\n                />\r\n                <span id=\"password-error\" className=\"login__error\"/>\r\n                <button type=\"submit\" className=\"login__button\">Зарегистрироваться</button>\r\n            </form>\r\n            <p className=\"login__text\">Уже зарегистрированы? <Link className=\"login__link\" to=\"/sign-in\">Войти</Link>\r\n            </p>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Register;","export default __webpack_public_path__ + \"static/media/success.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/error.df8eddf6.svg\";","import success from '../images/success.svg';\r\nimport error   from '../images/error.svg'\r\n\r\nfunction InfoTooltip({isOpen, onClose, onCloseOverlayClick, isInfoTooltipStatus}) {\r\n    return (\r\n        <div className={`popup ${isOpen && 'popup_opened'}`} onClick={onCloseOverlayClick}>\r\n            <div className=\"popup__container popup__container_type_tooltip\">\r\n                <img src={isInfoTooltipStatus ? success : error} alt={isInfoTooltipStatus ? \"иконка успешной регистрации\" : \"иконка ошибки\"} className=\"popup__image\"/>\r\n                <h2 className=\"popup__title popup__title_type_auth\">{isInfoTooltipStatus ? \"Вы успешно зарегистрировались!\" : \"Что-то пошло не так! Попробуйте ещё раз.\"}</h2>\r\n                <button\r\n                    aria-label=\"Закрыть окно\"\r\n                    type=\"button\"\r\n                    className=\"popup__close-button\"\r\n                    onClick={onClose}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoTooltip;","import React      from 'react';\r\nimport {Navigate} from 'react-router-dom';\r\n\r\nfunction ProtectedRoute({component: Component, ...props}) {\r\n    return (\r\n        props.loggedIn ? <Component {...props} /> : <Navigate to=\"/sign-in\"/>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute","const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nexport const signup = (email, password) => {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n        method: 'POST',\r\n        headers: {'Accept': 'application/json', 'Content-Type': 'application/json'},\r\n        body: JSON.stringify({email, password})\r\n    })\r\n        .then(_checkResponse);\r\n};\r\n\r\nexport const signin = (email, password) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n        method: 'POST',\r\n        headers: {'Accept': 'application/json', 'Content-Type': 'application/json'},\r\n        body: JSON.stringify({email, password})\r\n    })\r\n        .then(_checkResponse)\r\n        .then(data => {\r\n            localStorage.setItem('jwt', data.jwt);\r\n            localStorage.setItem('email', data.email);\r\n            return data;\r\n        });\r\n};\r\n\r\nexport const checkToken = token => {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(_checkResponse);\r\n};\r\n\r\nfunction _checkResponse(res) {\r\n    if (res.ok) {\r\n        return res.json()\r\n    } else {\r\n        return Promise.reject(res.status)\r\n    }\r\n}","import React                                  from 'react';\nimport {Route, Routes, Navigate, useNavigate} from 'react-router-dom';\nimport Header                                 from './Header.js';\nimport Main                                   from './Main.js';\nimport Footer                                 from './Footer.js';\nimport PopupWithForm                          from './PopupWithForm.js';\nimport ImagePopup                             from './ImagePopup.js';\nimport {api}                                  from '../utils/api.js';\nimport {CurrentUserContext}                   from '../contexts/CurrentUserContext.js';\nimport EditProfilePopup                       from './EditProfilePopup.js';\nimport EditAvatarPopup                        from './EditAvatarPopup.js';\nimport AddPlacePopup                          from './AddPlacePopup.js';\nimport Login                                  from './Login.js';\nimport Register                               from './Register.js';\nimport InfoTooltip                            from './InfoTooltip.js';\nimport ProtectedRoute                         from './ProtectedRoute.js';\nimport * as auth                              from '../utils/auth.js';\n\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isInfoTooltipOpened, setIsInfoTooltipOpened] = React.useState(false);\n    const [isInfoTooltipStatus, setIsInfoTooltipStatus] = React.useState(true);\n    const [selectedCard, setSelectedCard] = React.useState(null);\n    const [currentUser, setCurrentUser] = React.useState({});\n    const [cards, setCards] = React.useState([]);\n    const [loggedIn, setLoggedIn] = React.useState(false);\n    const [email, setEmail] = React.useState('');\n\n    const navigate = useNavigate();\n\n    React.useEffect(() => {\n        const jwt = localStorage.getItem('jwt');\n        if (jwt) {\n            // проверяем токен пользователя\n            auth\n                .checkToken(jwt)\n                .then((res) => {\n                    if (res) {\n                        setLoggedIn(true);\n                        setEmail(res.data.email);\n                    }\n                })\n                .catch((err) => {\n                    console.log(`Ошибка проверки токена: ${err}`);\n                    setLoggedIn(false);\n                });\n        }\n    }, []);\n\n    React.useEffect(() => {\n        api\n            .getAppInfo()\n            .then(([userInfoRes, cardListRes]) => {\n                setCurrentUser(userInfoRes);\n                setCards(cardListRes);\n            })\n            .catch((err) => {\n                console.log(`Ошибка загрузки данных: ${err}`);\n            });\n\n        function handleEscClose(event) {\n            if (event.key === 'Escape') {\n                closeAllPopups()\n            }\n        }\n\n        document.addEventListener('keyup', handleEscClose);\n        return () =>\n            document.removeEventListener('keyup', handleEscClose);\n    }, []);\n\n    function onLogin(email, password) {\n        auth\n            .signin(email, password)\n            .then(res => {\n                if (res.token) {\n                    // Устанавливаем в стейты email и признак того, что пользователь залогинен\n                    localStorage.setItem('jwt', res.token);\n                    setLoggedIn(true);\n                    setEmail(email);\n                    navigate('/');\n                }\n            })\n            .catch((err) => {\n                setIsInfoTooltipStatus(false);\n                handleInfoTooltip();\n                console.log(`Ошибка входа: ${err}`);\n            });\n    }\n\n    function onRegister(email, password) {\n        auth\n            .signup(email, password)\n            .then(res => {\n                if (res.data._id) {\n                    setIsInfoTooltipStatus(true);\n\n                    navigate('/sign-in');\n                } else {\n                    setIsInfoTooltipStatus(false);\n                }\n            })\n            .catch((err) => {\n                setIsInfoTooltipStatus(false);\n                console.log(`Ошибка регистрации: ${err}`);\n            })\n            .finally(() => handleInfoTooltip()\n            );\n    }\n\n    function onSignOut() {\n        setLoggedIn(false);\n        setEmail('');\n        navigate('/sign-in');\n        localStorage.removeItem('jwt');\n    }\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api\n            .updateCardLike(card._id, !isLiked)\n            .then((newCard) => {\n                setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n            })\n            .catch((err) => {\n                console.log(`Ошибка изменения данных лайка: ${err}`);\n            });\n    }\n\n    function handleCardDelete(delCard) {\n        api\n            .deleteCard(delCard._id)\n            .then(() => setCards(cards.filter(currentCard => currentCard._id !== delCard._id)))\n            .catch((err) => {\n                console.log(`Ошибка удаления карточки: ${err}`);\n            });\n    }\n\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleInfoTooltip() {\n        setIsInfoTooltipOpened(true);\n    }\n\n    function handleUpdateUser(data) {\n        api\n            .setUserInfo(data)\n            .then((user) => {\n                setCurrentUser(user);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(`Ошибка обновления данных профиля: ${err}`);\n            })\n    }\n\n    function handleUpdateAvatar(data) {\n        api\n            .setAvatar(data)\n            .then((userInfoRes) => {\n                setCurrentUser(userInfoRes);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(`Ошибка обновления аватара: ${err}`);\n            })\n    }\n\n    function handleAddPlaceSubmit(data) {\n        api\n            .postNewCard(data)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(`Ошибка добавления карточки: ${err}`);\n            })\n    }\n\n    function closeOverlayClick(event) {\n        if (event.target.classList.contains('popup_opened')) {\n            closeAllPopups();\n        }\n    }\n\n    function closeAllPopups() {\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsInfoTooltipOpened(false)\n        setSelectedCard(null);\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"root\">\n                <Routes>\n                    <Route path=\"/\"\n                           element={\n                               <>\n                                   <Header email={email} title=\"Выйти\" to=\"/sign-in\" onClick={onSignOut}/>\n                                   <ProtectedRoute\n                                       component={Main}\n                                       loggedIn={loggedIn}\n                                       onEditAvatar={handleEditAvatarClick}\n                                       onEditProfile={handleEditProfileClick}\n                                       onAddPlace={handleAddPlaceClick}\n                                       onCardClick={handleCardClick}\n                                       onCardLike={handleCardLike}\n                                       onCardDelete={handleCardDelete}\n                                       cards={cards}\n                                   />\n                               </>}\n                    />\n\n                    <Route path={loggedIn ? '' : '/sign-in'}\n                           element={\n                               <>\n                                   <Header title=\"Регистрация\" to=\"/sign-up\"/>\n                                   <Login\n                                       onLogin={onLogin}\n                                   />\n                               </>\n                           }\n                    />\n\n                    <Route path={loggedIn ? '' : '/sign-up'}\n                           element={\n                               <>\n                                   <Header title=\"Войти\" to=\"/sign-in\"/>\n                                   <Register\n                                       onRegister={onRegister}\n                                   />\n                               </>\n                           }\n                    />\n\n                    <Route path=\"*\" element={<Navigate to=\"/\"/>}/>\n                </Routes>\n\n                <Footer/>\n\n                <ImagePopup\n                    card={selectedCard}\n                    onClose={closeAllPopups}\n                    onCloseOverlayClick={closeOverlayClick}\n                />\n\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser}\n                    onCloseOverlayClick={closeOverlayClick}\n                />\n\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlaceSubmit}\n                    onCloseOverlayClick={closeOverlayClick}\n                />\n\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar}\n                    onCloseOverlayClick={closeOverlayClick}\n                />\n\n                {/*Пока не работает, как сдам ПР 12 доделать функционал!!!\n                По рекомендации ревью \"Для попапа подтверждения можно было\n                создать свой компонент ConfirmationPopup\"*/}\n                <PopupWithForm\n                    name=\"confirmation\"\n                    title=\"Вы уверены?\"\n                    isOpen={false}\n                    onClose={closeAllPopups}\n                    onCloseOverlayClick={closeOverlayClick}\n                    buttonTitle=\"Да\"\n                />\n\n                <InfoTooltip\n                    isInfoTooltipStatus={isInfoTooltipStatus}\n                    isOpen={isInfoTooltipOpened}\n                    onClose={closeAllPopups}\n                    onCloseOverlayClick={closeOverlayClick}\n                />\n\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React           from 'react';\nimport ReactDOM        from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App             from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}